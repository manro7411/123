import { useEffect, useState } from "react";
import { X, Save } from "lucide-react";

interface Lesson {
  id: number;
  title: string;
  thumbnailUrl?: string;
  category: string;
}

interface EditLessonModalProps {
  open: boolean;
  initial: Lesson;
  onClose: () => void;
  onSave: (data: { title: string; category: string; thumbnailUrl?: string }) => void;
}

const EditLessonModal = ({ open, initial, onClose, onSave }: EditLessonModalProps) => {
  const [title, setTitle] = useState(initial.title);
  const [category, setCategory] = useState(initial.category);
  const [thumbnailUrl, setThumbnailUrl] = useState(initial.thumbnailUrl ?? "");

  useEffect(() => {
    if (!open) return;
    // รีเฟรชค่าเมื่อเปิดใหม่/เปลี่ยน initial
    setTitle(initial.title);
    setCategory(initial.category);
    setThumbnailUrl(initial.thumbnailUrl ?? "");
  }, [open, initial]);

  if (!open) return null;

  const stop = (e: React.MouseEvent) => e.stopPropagation();

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    onSave({ title: title.trim(), category: category.trim(), thumbnailUrl: thumbnailUrl.trim() || undefined });
  };

  return (
    <div className="fixed inset-0 bg-black/50 z-50 flex items-center justify-center" onClick={onClose}>
      <div className="bg-white rounded-xl shadow-lg w-full max-w-lg p-6" onClick={stop}>
        <div className="flex items-center justify-between mb-4">
          <h2 className="text-lg font-semibold">Edit Learning Content</h2>
          <button onClick={onClose} className="text-gray-500 hover:text-gray-700" aria-label="Close">
            <X size={18} />
          </button>
        </div>

        <form className="space-y-4" onSubmit={handleSubmit}>
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-1">Title</label>
            <input
              value={title}
              onChange={(e) => setTitle(e.target.value)}
              className="w-full border rounded-lg px-3 py-2"
              placeholder="Lesson title"
              required
            />
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-700 mb-1">Category</label>
            <input
              value={category}
              onChange={(e) => setCategory(e.target.value)}
              className="w-full border rounded-lg px-3 py-2"
              placeholder="Category"
              required
            />
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-700 mb-1">Thumbnail URL</label>
            <input
              value={thumbnailUrl}
              onChange={(e) => setThumbnailUrl(e.target.value)}
              className="w-full border rounded-lg px-3 py-2"
              placeholder="https://..."
              type="url"
            />
          </div>

          <div className="flex justify-end gap-3 pt-2">
            <button type="button" onClick={onClose} className="px-4 py-2 rounded-lg border">
              Cancel
            </button>
            <button type="submit" className="px-4 py-2 rounded-lg bg-blue-600 text-white hover:bg-blue-700 flex items-center gap-2">
              <Save size={16} /> Save
            </button>
          </div>
        </form>
      </div>
    </div>
  );
};

export default EditLessonModal;
