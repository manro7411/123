                                                                                                                                                                                                                                    
2025-09-24 15:58:28,050 INFO  [org.acm.sec.jwt.LDAPAuthenticationService] (executor-thread-1) User info retrieved from LDAP: null
2025-09-24 15:58:28,052 WARN  [Tes.LoginResource] (executor-thread-1) LDAP authentication failed for s_Tratchanon: Cannot invoke "org.acme.security.jwt.LDAPUserInfo.getFirstName()" because "userInfo" is null
__  ____  __  _____   ___  __ ____  ______ ource] (executor-thread-1) No local user found with email: s_Tratchanon
2025-09-24 15:58:54,595 ERROR [org.acm.sec.jwt.LDAPAuthenticationService] (executor-thread-1) LDAP search failed for s_Tratchanon: [LDAP: error code 32 - 0000208D: NameErr: DSID-03100245, problem 2001 (NO_OBJECT), data 0, best match of:
        'DC=oa,DC=bbl'
]

Exception in LDAPAuthenticationService.java:95
          93              String searchBase = "ou=Users,dc=oa,dc=bbl";
          94  
        ? 95              NamingEnumeration<SearchResult> results = ctx.search(searchBase, searchFilter, searchControls);
          96  
          97              if (results.hasMore()) {



Exception in LDAPAuthenticationService.java:131
          129          } catch (NoResultException e) {
          130              log.warn("LDAPAuthenticationService->findOrCreateLdapUser: LDAP user not found : {}", ldapUsername);                                                                                                     
        ? 131              LDAPUserInfo userInfo = getUserInfo(ldapUsername, password);                                                                                                                                             
          132              log.info("User info retrieved from LDAP: {}", userInfo != null ? userInfo.getEmail() : "null");                                                                                                          
          133              user = new User();                                                                                                                                                                                       
                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                    
Exception in LoginResource.java:44                                                                                                                                                                                                  
          42                  boolean ldapAuthenticated = ldapAuthenticationService.validateUserCredentials(email, request.password);                                                                                               
          43                  if (ldapAuthenticated) {                                                                                                                                                                              
        ? 44                      User user = ldapAuthenticationService.findOrCreateLdapUser(username,request.password);                                                                                                            
          45                      String token = JwtUtil.generateToken(user.getEmail(), user.getRole(), user.getName(), Duration.ofHours(2));                                                                                       
          46                      log.info("LDAP login successful: {}", token);                                                                                                                                                     
                                                                                                                                                                                                                                    
: javax.naming.NameNotFoundException: [LDAP: error code 32 - 0000208D: NameErr: DSID-03100245, problem 2001 (NO_OBJECT), data 0, best match of:                                                                                     
        'DC=oa,DC=bbl'                                                                                                                                                                                                              
]; remaining name 'ou=Users,dc=oa,dc=bbl'                                                                                                                                                                                           
        at java.naming/com.sun.jndi.ldap.LdapCtx.mapErrorCode(LdapCtx.java:3285)                                                                                                                                                    
        at java.naming/com.sun.jndi.ldap.LdapCtx.processReturnCode(LdapCtx.java:3206)                                                                                                                                               
        at java.naming/com.sun.jndi.ldap.LdapCtx.processReturnCode(LdapCtx.java:2997)                                                                                                                                               
        at java.naming/com.sun.jndi.ldap.LdapCtx.searchAux(LdapCtx.java:1876)                                                                                                                                                       
        at java.naming/com.sun.jndi.ldap.LdapCtx.c_search(LdapCtx.java:1799)                                                                                                                                                        
        at java.naming/com.sun.jndi.toolkit.ctx.ComponentDirContext.p_search(ComponentDirContext.java:392)                                                                                                                          
        at java.naming/com.sun.jndi.toolkit.ctx.PartialCompositeDirContext.search(PartialCompositeDirContext.java:358)                                                                                                              
        at java.naming/com.sun.jndi.toolkit.ctx.PartialCompositeDirContext.search(PartialCompositeDirContext.java:341)                                                                                                              
        at java.naming/javax.naming.directory.InitialDirContext.search(InitialDirContext.java:346)                                                                                                                                  
        at org.acme.security.jwt.LDAPAuthenticationService.getUserInfo(LDAPAuthenticationService.java:95)                                                                                                                           
        at org.acme.security.jwt.LDAPAuthenticationService.findOrCreateLdapUser(LDAPAuthenticationService.java:131)                                                                                                                 
        at org.acme.security.jwt.LDAPAuthenticationService_ClientProxy.findOrCreateLdapUser(Unknown Source)                                                                                                                         
        at Testing.LoginResource.login(LoginResource.java:44)                                                                                                                                                                       
        at Testing.LoginResource_Subclass.login$$superforward(Unknown Source)                                                                                                                                                       
        at Testing.LoginResource_Subclass$$function$$3.apply(Unknown Source)                                                                                                                                                        
        at io.quarkus.arc.impl.AroundInvokeInvocationContext.proceed(AroundInvokeInvocationContext.java:73)                                                                                                                         
        at io.quarkus.arc.impl.AroundInvokeInvocationContext.proceed(AroundInvokeInvocationContext.java:62)                                                                                                                         
        at io.quarkus.narayana.jta.runtime.interceptor.TransactionalInterceptorBase.invokeInOurTx(TransactionalInterceptorBase.java:136)                                                                                            
        at io.quarkus.narayana.jta.runtime.interceptor.TransactionalInterceptorBase.invokeInOurTx(TransactionalInterceptorBase.java:107)                                                                                            
        at io.quarkus.narayana.jta.runtime.interceptor.TransactionalInterceptorRequired.doIntercept(TransactionalInterceptorRequired.java:38)                                                                                       
        at io.quarkus.narayana.jta.runtime.interceptor.TransactionalInterceptorBase.intercept(TransactionalInterceptorBase.java:61)                                                                                                 
        at io.quarkus.narayana.jta.runtime.interceptor.TransactionalInterceptorRequired.intercept(TransactionalInterceptorRequired.java:32)                                                                                         
        at io.quarkus.narayana.jta.runtime.interceptor.TransactionalInterceptorRequired_Bean.intercept(Unknown Source)                                                                                                              
        at io.quarkus.arc.impl.InterceptorInvocation.invoke(InterceptorInvocation.java:42)                                                                                                                                          
        at io.quarkus.arc.impl.AroundInvokeInvocationContext.perform(AroundInvokeInvocationContext.java:30)                                                                                                                         
        at io.quarkus.arc.impl.InvocationContexts.performAroundInvoke(InvocationContexts.java:27)                                                                                                                                   
2025-09-24 15:58:54,602 ERROR [Tes.LoginResource] (executor-thread-1) No local user found with email: s_Tratchanon Cannot invoke "org.acme.security.jwt.LDAPUserInfo.getFirstName()" because "userInfo" is null                     
--
Press [e] to edit command line args (currently ''), [:] for the terminal, [h] for more options>

package org.acme.security.jwt;

import com.aventrix.jnanoid.jnanoid.NanoIdUtils;
import jakarta.enterprise.context.RequestScoped;
import jakarta.inject.Inject;
import jakarta.persistence.EntityManager;
import jakarta.persistence.NoResultException;
import model.User;
import org.eclipse.microprofile.config.inject.ConfigProperty;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import javax.naming.Context;
import javax.naming.NamingEnumeration;
import javax.naming.NamingException;
import javax.naming.directory.Attributes;
import javax.naming.directory.DirContext;
import javax.naming.directory.InitialDirContext;
import javax.naming.directory.SearchControls;
import javax.naming.directory.SearchResult;

import java.util.HashMap;
import java.util.Hashtable;
@RequestScoped
public class LDAPAuthenticationService {

    @Inject
    EntityManager em;
    private static final Logger log = LoggerFactory.getLogger(LDAPAuthenticationService.class);
    private final String providerUrl;
    private final String domainName;

    public LDAPAuthenticationService(
            @ConfigProperty(name = "quarkus.security.ldap.dir-context.url") String providerUrl,
            @ConfigProperty(name = "app.ldap.domain") String domainName) {
        this.providerUrl = providerUrl;
        this.domainName = domainName;
    }
    public boolean validateUserCredentials(String username, String password) {
        log.info("LDAPAuthenticationService->validateUserCredential: {}", username);
        HashMap<String, String> environment = new HashMap<>();
        environment.put(Context.INITIAL_CONTEXT_FACTORY, "com.sun.jndi.ldap.LdapCtxFactory");
        environment.put(Context.PROVIDER_URL, providerUrl);
        environment.put(Context.SECURITY_AUTHENTICATION, "simple");
        environment.put(Context.SECURITY_PRINCIPAL, createBindPrincipal(username));
        environment.put(Context.SECURITY_CREDENTIALS, password);

        try {
            DirContext ctx = new InitialDirContext(new Hashtable<>(environment));
            ctx.close();
            log.info("LDAPAuthenticationService->validateUserCredential: {} - Success", username);
            return true;
        } catch (javax.naming.AuthenticationException e) {
            log.error("Authentication failed for user {}: Invalid credentials", username, e);
        } catch (NamingException e) {
            log.error("Error contacting LDAP server {}: Unable to connect", providerUrl, e);
        } catch (Exception e) {
            log.error("Unexpected error: {}", e.getMessage(), e);
        }
        return false;
    }
    public String createBindPrincipal(String username) {
        log.info("LDAPAuthenticationService->createBindPrincipal: {}", username);
        if (username.toLowerCase().endsWith("@" + domainName.toLowerCase())) {
            return username;
        } else {
            return username + "@" + domainName;
        }
    }
    public LDAPUserInfo getUserInfo(String username, String password) {
        log.info("LDAPAuthenticationService->getUserInfo: {}", username);

        if (!validateUserCredentials(username, password)) {
            log.warn("LDAPAuthenticationService->getUserInfo: Invalid credentials for {}", username);
            return null;
        }

        HashMap<String, String> environment = new HashMap<>();
        environment.put(Context.INITIAL_CONTEXT_FACTORY, "com.sun.jndi.ldap.LdapCtxFactory");
        environment.put(Context.PROVIDER_URL, providerUrl);
        environment.put(Context.SECURITY_AUTHENTICATION, "simple");
        environment.put(Context.SECURITY_PRINCIPAL, createBindPrincipal(username));
        environment.put(Context.SECURITY_CREDENTIALS, password);

        try {
            DirContext ctx = new InitialDirContext(new Hashtable<>(environment));
            SearchControls searchControls = new SearchControls();
            searchControls.setSearchScope(SearchControls.SUBTREE_SCOPE);
            searchControls.setReturningAttributes(new String[]{"givenName", "sn", "mail"});

            // Use uid instead of sAMAccountName to match your LDAP config
            String searchFilter = "(uid=" + username.split("@")[0] + ")";
            // Use the search base from your config
            String searchBase = "ou=Users,dc=oa,dc=bbl";

            NamingEnumeration<SearchResult> results = ctx.search(searchBase, searchFilter, searchControls);

            if (results.hasMore()) {
                SearchResult result = results.next();
                Attributes attrs = result.getAttributes();

                String firstName = attrs.get("givenName") != null ?
                        attrs.get("givenName").get().toString() : "FirstName";
                String lastName = attrs.get("sn") != null ?
                        attrs.get("sn").get().toString() : "LastName";
                String email = attrs.get("mail") != null ?
                        attrs.get("mail").get().toString() : username;

                ctx.close();
                log.info("LDAPAuthenticationService->getUserInfo: Successfully retrieved info for {}", username);
                return new LDAPUserInfo(firstName, lastName, email);
            } else {
                log.warn("LDAPAuthenticationService->getUserInfo: No LDAP entry found for {}", username);
            }
            ctx.close();
        } catch (NamingException e) {
            log.error("LDAP search failed for {}: {}", username, e.getMessage(), e);
        } catch (Exception e) {
            log.error("Unexpected error while retrieving user info for {}: {}", username, e.getMessage(), e);
        }
        return null;
    }
    public User findOrCreateLdapUser(String ldapUsername, String password) {
        log.info("LDAPAuthenticationService->findOrCreateLdapUser: {}", ldapUsername);
        User user;
        try {
            user = em.createQuery("SELECT u FROM User u WHERE u.email = :email", User.class)
                    .setParameter("email", ldapUsername)
                    .getSingleResult();
        } catch (NoResultException e) {
            log.warn("LDAPAuthenticationService->findOrCreateLdapUser: LDAP user not found : {}", ldapUsername);
            LDAPUserInfo userInfo = getUserInfo(ldapUsername, password);
            log.info("User info retrieved from LDAP: {}", userInfo != null ? userInfo.getEmail() : "null");
            user = new User();
            user.setId(NanoIdUtils.randomNanoId());
            user.setName(userInfo.getFirstName() + " " + userInfo.getLastName());
            user.setEmail(userInfo != null ? userInfo.getEmail() : ldapUsername);
            user.setLdap(true);
            user.setRole("user");
            em.persist(user);
            log.info("LDAPAuthenticationService->findOrCreateLdapUser: New LDAP user created - id={}, name={}", user.getId(), user.getName());
        }
        return user;
    }
}

