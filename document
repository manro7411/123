

    @PUT
    @Path("/{lessonId}")
    @Transactional
    public Response updateProgress(@PathParam("lessonId") String lessonId, UpdateProgressRequest req) {
        String userEmail = jwt.getSubject();

        var progress = em.createQuery("""
                SELECT p FROM UserLessonProgress p
                WHERE p.lessonId = :lessonId AND p.userEmail = :userEmail
                """, UserLessonProgress.class)
                .setParameter("lessonId", lessonId)
                .setParameter("userEmail", userEmail)
                .getResultStream()
                .findFirst()
                .orElseGet(() -> {
                    var newProgress = new UserLessonProgress();
                    newProgress.setLessonId(lessonId);
                    newProgress.setUserEmail(userEmail);
                    em.persist(newProgress);
                    return newProgress;
                });

        progress.setPercent(Math.max(progress.getPercent(), req.percent));
        progress.setLastTimestamp(Optional.ofNullable(req.lastTimestamp).orElse(0));
        progress.setUpdatedAt(LocalDateTime.now());
        progress.setThumbnailUrl(req.thumbnailUrl);
        progress.setScreenTime(req.screenTime);


        System.out.println("Progress updated: " + progress.getPercent());
        if (req.percent == 100 ) {
            boolean scoreExists = em.createQuery("""
            SELECT COUNT(ls) FROM LearningScoreEntity ls
            WHERE ls.userEmail = :userEmail AND ls.lessonId = :lessonId
            """, Long.class)
                    .setParameter("userEmail", userEmail)
                    .setParameter("lessonId", lessonId)
                    .getSingleResult() > 0;

            if (!scoreExists) {
                LearningScoreEntity learningScore = new LearningScoreEntity();
                learningScore.setUserEmail(userEmail);
                learningScore.setLessonId(lessonId);
                learningScore.setOverallScore(1);
                learningScore.setUpdatedAt(LocalDateTime.now());
                em.persist(learningScore);
                System.out.println("Learning score added for completed lesson.");
            } else {
                System.out.println("Learning score already exists. Skipping insert.");
            }
        }


        return Response.ok().build();
    }
