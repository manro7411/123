@GET
    @Path("/assignment/{trainerId}")
    public Response getTrainerAssignmentInfo(@PathParam("trainerId") String trainerId) {
        log.info("Fetching assignment info for trainerId => {}", trainerId);

        String jpql = """
        SELECT ra.assignedBy.name, ra.team.name, ra.team.id
        FROM RoleAssignmentEntity ra
        WHERE ra.assignedTo.id = :trainerId
    """;
        List<Object[]> results = em.createQuery(jpql, Object[].class)
                .setParameter("trainerId", trainerId)
                .getResultList();
        if (results.isEmpty()) {
            return Response.ok(Map.of(
                    "trainerId", trainerId,
                    "teams", List.of(),
                    "message", "Not Assigned"
            )).build();
        }
        List<Map<String, String>> teams = new ArrayList<>();
        for (Object[] row : results) {
            teams.add(Map.of(
                    "supervisor", row[0] != null ? row[0].toString() : "N/A",
                    "teamName", row[1] != null ? row[1].toString() : "N/A",
                    "teamId", row[2] != null ? row[2].toString() : "N/A"
            ));
        }
        return Response.ok(Map.of(
                "trainerId", trainerId,
                "teams", teams
        )).build();
    }
