const fetchLearningTasks = async () => {
      try {
        const res = await fetch("/api/learning", {
          headers: { Authorization: `Bearer ${token}` }
        });
        if (!res.ok) return;
        const lessons: LessonFromAPI[] = await res.json();

        const specificLessons = lessons.filter(
          (lesson) =>
            lesson.assignType === "specific" &&
            Array.isArray(lesson.assignedUserIds) &&
            lesson.assignedUserIds.includes(userId)
        );

        const learningTasks: Task[] = specificLessons.map((lesson) => ({
          id: lesson.id,
          title: lesson.title,
          status: 'todo',
          type: 'learning',
          lessonId: lesson.id,
          thumbnailUrl: lesson.thumbnailUrl || "/placeholder.png",
          author: lesson.authorName || "Unknown",
          role: lesson.authorRole || "Instructor",
          progress: 0,
        }));

        setTasks(prev => {
          const prevLearningIds = new Set(prev.filter(t => t.type === 'learning').map(t => t.lessonId));
          const newLearning = learningTasks.filter(t => !prevLearningIds.has(t.lessonId));
          return [...prev, ...newLearning];
        });
      } catch (err) {
        console.error("Failed to fetch learning tasks", err);
      }
    };
