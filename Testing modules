import { useMemo, useState } from "react";
import SupervisorSidebarWidget from "./Widgets/SupervisorSideBar";
import { ChevronRight, Shield, Users, X, Search, Crown } from "lucide-react";

/**
 * SupervisorDashboard (Mock Version – Admin adds members; Supervisor manages trainer role only)
 * - ไม่เรียก API: ใช้ข้อมูลจำลองในหน้านี้
 * - Supervisor: เลือกทีม (ของตัวเอง), ดูสมาชิก, ตั้ง/ถอน "trainer" (บทบาทในทีม)
 * - Admin: ไปจัดการเพิ่มสมาชิก/ตั้ง supervisor ในหน้า Admin (ไม่อยู่ในหน้านี้)
 */

// ----------------------
// Types
// ----------------------
export type Team = { id: string; name: string; supervisorId?: string };
export type TeamMember = { userId: string; name?: string; role: "member" | "trainer" | "supervisor" };

// ----------------------
// Mock Data
// ----------------------
const MOCK_TEAMS: Team[] = [
  { id: "T-001", name: "Onboarding Squad", supervisorId: "daisy@example.com" },
  { id: "T-002", name: "Sales Enablement", supervisorId: "ivan@example.com" },
  { id: "T-003", name: "Tech Academy", supervisorId: "olivia@example.com" },
];

const MOCK_TEAM_MEMBERS: Record<string, TeamMember[]> = {
  "T-001": [
    { userId: "alice@example.com", name: "Alice", role: "member" },
    { userId: "bob@example.com", name: "Bob", role: "trainer" },
    { userId: "charlie@example.com", name: "Charlie", role: "member" },
    { userId: "daisy@example.com", name: "Daisy", role: "supervisor" },
  ],
  "T-002": [
    { userId: "fiona@example.com", name: "Fiona", role: "member" },
    { userId: "george@example.com", name: "George", role: "member" },
    { userId: "hana@example.com", name: "Hana", role: "trainer" },
    { userId: "ivan@example.com", name: "Ivan", role: "supervisor" },
  ],
  "T-003": [
    { userId: "ken@example.com", name: "Ken", role: "member" },
    { userId: "mina@example.com", name: "Mina", role: "member" },
    { userId: "nate@example.com", name: "Nate", role: "trainer" },
    { userId: "olivia@example.com", name: "Olivia", role: "supervisor" },
  ],
};

// ----------------------
// Small helpers
// ----------------------
function Chip({ children }: { children: React.ReactNode }) {
  return (
    <span className="inline-flex items-center gap-1 rounded-full border px-3 py-1 text-xs bg-white">
      {children}
    </span>
  );
}

// ----------------------
// TeamMembersManager — ดูสมาชิก + ตั้งบทบาท trainer (ไม่มีเพิ่มสมาชิก)
// ----------------------
function TeamMembersManager({
  teamId,
  members,
  setMembers,
  supervisorId,
}: {
  teamId: string;
  members: TeamMember[];
  setMembers: (next: TeamMember[]) => void;
  supervisorId?: string;
}) {
  const [selected, setSelected] = useState<TeamMember | null>(members[0] || null);
  const [search, setSearch] = useState("");

  const list = useMemo(() => {
    const q = search.trim().toLowerCase();
    if (!q) return members;
    return members.filter(
      (m) => (m.name || "").toLowerCase().includes(q) || m.userId.toLowerCase().includes(q)
    );
  }, [members, search]);

  const setTrainer = (userId: string, nextRole: "trainer" | "member") => {
    // กันไม่ให้แก้ supervisor
    const target = members.find((m) => m.userId === userId);
    if (!target) return;
    if (target.role === "supervisor") {
      alert("ไม่สามารถเปลี่ยนบทบาทของ Supervisor ได้");
      return;
    }
    const next = members.map((m) => (m.userId === userId ? { ...m, role: nextRole } : m));
    setMembers(next);
    const updated = next.find((m) => m.userId === userId) || null;
    setSelected(updated);
  };

  // หา supervisor เพื่อแสดงในหัวข้อ
  const supervisor = members.find((m) => m.role === "supervisor" || m.userId === supervisorId);

  return (
    <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
      {/* รายชื่อสมาชิก */}
      <div className="md:col-span-1 rounded-2xl border bg-white/60 overflow-hidden">
        <div className="px-4 py-3 border-b font-semibold flex items-center justify-between">
          <span>สมาชิกทีม</span>
          <span className="text-xs opacity-70">{members.length} คน</span>
        </div>

        <div className="p-3 border-b bg-white">
          <div className="relative">
            <Search className="w-4 h-4 absolute left-3 top-1/2 -translate-y-1/2 opacity-60" />
            <input
              className="w-full rounded-xl border pl-9 pr-3 py-2 bg-white"
              placeholder="ค้นหาชื่อหรืออีเมล"
              value={search}
              onChange={(e) => setSearch(e.target.value)}
            />
          </div>
          {supervisor && (
            <div className="mt-3 text-xs text-blue-700 bg-blue-50 border border-blue-100 rounded-xl px-3 py-2 flex items-center gap-2">
              <Crown className="w-3.5 h-3.5" />
              Supervisor: <b>{supervisor.name || supervisor.userId}</b>
            </div>
          )}
        </div>

        <div className="max-h-96 overflow-auto divide-y bg-white">
          {list.map((m) => (
            <button
              key={`${teamId}-${m.userId}`}
              onClick={() => setSelected(m)}
              className={`w-full text-left p-3 hover:bg-gray-50 flex items-center justify-between ${
                selected?.userId === m.userId ? "bg-gray-50" : ""
              }`}
            >
              <div className="min-w-0">
                <div className="font-medium truncate flex items-center gap-2">
                  {m.name || m.userId}
                  {m.role === "supervisor" && (
                    <span className="inline-flex items-center gap-1 rounded-full bg-yellow-50 text-yellow-800 border border-yellow-200 px-2 py-0.5 text-[10px]">
                      <Crown className="w-3 h-3" /> SUPERVISOR
                    </span>
                  )}
                </div>
                <div className="text-xs opacity-70">บทบาทในทีม: {m.role}</div>
              </div>
              <ChevronRight className="w-4 h-4 opacity-60" />
            </button>
          ))}
        </div>

        {/* หมายเหตุ: เพิ่มสมาชิกทำที่ฝั่ง Admin เท่านั้น */}
        <div className="p-3 border-t bg-white text-[12px] text-gray-600">
          การเพิ่มสมาชิก/เปลี่ยน Supervisor ทำได้เฉพาะ <b>Admin</b> เท่านั้น
        </div>
      </div>

      {/* รายละเอียด/ตั้งบทบาท */}
      <div className="md:col-span-2 rounded-2xl border bg-white/60 p-4">
        {selected ? (
          <div className="space-y-4">
            <div className="flex items-center justify-between">
              <div>
                <div className="text-lg font-semibold">{selected.name || selected.userId}</div>
                <div className="text-sm opacity-70">บทบาทในทีมปัจจุบัน: {selected.role}</div>
              </div>
              <div className="flex gap-2">
                <Chip>
                  <Users className="w-3.5 h-3.5" /> {selected.userId}
                </Chip>
                {selected.role === "trainer" && (
                  <Chip>
                    <Shield className="w-3.5 h-3.5" /> trainer
                  </Chip>
                )}
              </div>
            </div>

            {/* Promote/demote trainer */}
            {selected.role !== "supervisor" ? (
              <div className="flex gap-2">
                {selected.role !== "trainer" ? (
                  <button
                    className="rounded-xl px-4 py-2 border bg-white hover:bg-gray-50"
                    onClick={() => setTrainer(selected.userId, "trainer")}
                  >
                    ตั้งเป็น Trainer (สร้างคอร์สได้)
                  </button>
                ) : (
                  <button
                    className="rounded-xl px-4 py-2 border bg-white hover:bg-gray-50"
                    onClick={() => setTrainer(selected.userId, "member")}
                  >
                    ถอนบทบาท Trainer
                  </button>
                )}
              </div>
            ) : (
              <div className="text-sm text-amber-700 bg-amber-50 border border-amber-100 rounded-xl px-3 py-2">
                Supervisor ไม่สามารถเปลี่ยนบทบาทได้จากหน้านี้
              </div>
            )}

            <div className="text-sm opacity-70">
              *บทบาท “trainer” ในทีมนี้ จะทำให้ผู้ใช้งานสามารถสร้าง/จัดการคอร์สของทีมได้
            </div>
          </div>
        ) : (
          <div className="text-sm opacity-70">เลือกสมาชิกทางซ้ายเพื่อดูรายละเอียด</div>
        )}
      </div>
    </div>
  );
}

// ----------------------
// Main — เลือกทีม + รวมคอมโพเนนต์
// ----------------------
export default function SupervisorDashboard() {
  const [teams] = useState<Team[]>(MOCK_TEAMS);
  const [teamMembersMap, setTeamMembersMap] = useState<Record<string, TeamMember[]>>({
    ...MOCK_TEAM_MEMBERS,
  });
  const [selectedTeamId, setSelectedTeamId] = useState<string>(MOCK_TEAMS[0].id);

  const selectedTeam = useMemo(
    () => teams.find((t) => t.id === selectedTeamId)!,
    [teams, selectedTeamId]
  );
  const members = teamMembersMap[selectedTeamId] || [];

  const setMembers = (next: TeamMember[]) => {
    setTeamMembersMap((prev) => ({ ...prev, [selectedTeamId]: next }));
  };

  return (
    <div className="flex h-screen bg-gray-50">
      <SupervisorSidebarWidget />

      <div className="flex-1 p-6 md:p-8 overflow-y-auto space-y-6">
        <div className="flex items-center justify-between">
          <h1 className="text-2xl md:text-3xl font-bold">Supervisor Dashboard</h1>
          <div className="text-xs opacity-70">
            ทีมที่เลือก: <span className="font-medium">{selectedTeam.name}</span>
          </div>
        </div>

        {/* เลือกทีม */}
        <div className="rounded-2xl border bg-white p-4">
          <div className="mb-3 font-semibold flex items-center gap-2">
            ทีมของฉัน
            <span className="text-[11px] text-gray-500 font-normal">
              (เพิ่มสมาชิก/เปลี่ยน Supervisor ทำในหน้า Admin)
            </span>
          </div>
          <div className="flex gap-2 flex-wrap">
            {teams.map((t) => (
              <button
                key={t.id}
                onClick={() => setSelectedTeamId(t.id)}
                className={`rounded-xl px-3 py-2 border ${
                  selectedTeamId === t.id ? "bg-blue-600 text-white" : "bg-white"
                }`}
                title={t.supervisorId ? `Supervisor: ${t.supervisorId}` : ""}
              >
                <span className="inline-flex items-center gap-1">
                  {t.name}
                  {t.supervisorId &&
                    MOCK_TEAM_MEMBERS[t.id]?.some((m) => m.userId === t.supervisorId) && (
                      <Crown className="w-3.5 h-3.5 opacity-80" />
                    )}
                </span>
              </button>
            ))}
          </div>
        </div>

        {/* รายละเอียดทีม + จัดการ trainer */}
        <div className="rounded-2xl border bg-white p-4">
          <div className="mb-3">
            <div className="text-lg font-semibold">ทีม: {selectedTeam.name}</div>
            <div className="text-sm opacity-70">
              ตั้ง/ถอนบทบาท Trainer ให้สมาชิกในทีม (การเพิ่มสมาชิกทำที่ Admin)
            </div>
          </div>
          <TeamMembersManager
            teamId={selectedTeam.id}
            members={members}
            setMembers={setMembers}
            supervisorId={selectedTeam.supervisorId}
          />
        </div>

        {/* หมายเหตุ: เวอร์ชัน mock — ไม่มีการเรียก API จริง */}
      </div>
    </div>
  );
}
